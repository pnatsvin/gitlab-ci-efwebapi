# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

stages:          # List of stages for jobs, and their order of execution
  - test
  - build
  #- build-deb
  #- build-docker-deb
  - deploy
  - build-docker
  

test:
  stage: test
  script:
    - cd /home/gitlab-runner/
    - pwd
    - ./rtest.sh
  tags:
    - "net"  
build:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - echo $CI_JOB_ID > /home/gitlab-runner/job_id
    - dotnet build EFWebapi_v2 -c Release -o ./artifacts/EFWebapi_v2
 # when: manual  
  artifacts:
    name: "$CI_JOB_NAME"
    paths:
      - ./artifacts/EFWebapi_v2
  tags:
    - "net" 

#build-deb:
#  stage: build-deb
#  script:
#    - echo $CI_JOB_ID > /home/gitlab-runner/job_id_deb 
#    - dpkg-deb --build . efapp.deb
#  artifacts:
#    paths:
#      - ./efapp.deb
#    expire_in: 7 days
#  tags:
#    - "net"

#build-docker-deb:   
#  stage: build-docker-deb   
#  script:
#    - pwd
#    - job_id_deb=$(cat /home/gitlab-runner/job_id_deb)
#    - curl --location --output Release.zip  "https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/jobs/$job_id_deb/artifacts"
#    - if [ -d ~/deb ]; then echo "ok"; else mkdir ~/deb; fi;
#    - dpkg --extract efapp.deb ~/deb
#    - docker build -t pnatsvin/gitlab-ci-efwebapi:deb ~/deb/ 
#  tags:
#    - "net"

deploy:
  stage: deploy 
  script:
    - pwd
    - echo $CI_PROJECT_ID
    - jobid=$(cat /home/gitlab-runner/job_id)
    - curl --location --output Release.zip  "https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/jobs/$jobid/artifacts"
    - pwd
    - if [ -d ~/project ]; then echo "ok"; else mkdir ~/project; fi; 
    - unzip -o Release.zip -d ~/project &&  mv -f ~/project/artifacts/EFWebapi_v2/ ~/project/ && rm -rf ~/project/artifacts/
  #when: manual
 # only:
 #   - main  
  tags:
    - "net"  
docker:
  stage: build-docker
  script:
    - cd $CI_PROJECT_DIR
    - docker build -f EFWebapi_v2/Dockerfile -t my-app .
  tags:
    - "net"  
