# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

stages:          # List of stages for jobs, and their order of execution
  - test
  - build
  - deploy
  - build-docker
  

test-job:
  stage: test
  script:
    - cd /home/gitlab-runner/
    - pwd
    - ./rtest.sh
  tags:
    - "net"  
build-job:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - dotnet build EFWebapi_v2 -c Release -o ./artifacts/EFWebapi_v2
  when: manual  
  artifacts:
    paths:
      - ./artifacts/EFWebapi_v2
  tags:
    - "net"  
deploy-job:
  stage: deploy 
  script:
    - pwd
    - - 'curl --location --output /home/gitlab-runner/lastproject/artifacts1.zip "https://gitlab.com/api/v4/projects/35763098/jobs/artifacts/main/download?job=build-job"'
 #   - 'wget "https://gitlab.com/pnatsvin/gitlab-ci-efwebapi/-/jobs/artifacts/main/download?job=build-job" -O /home/gitlab-runner/lastproject/artifacts1.zip'
    - cd /home/gitlab-runner/lastproject/
    - pwd
    - ls -las
    - unzip -o /home/gitlab-runner/lastproject/artifacts1.zip -d /home/gitlab-runner/project
    - pwd
  when: manual
  only:
    - main  
  tags:
    - "net"  
build-docker-job:
  stage: build-docker
  script:
    - cd $CI_PROJECT_DIR
    - docker build -f EFWebapi_v2/Dockerfile -t my-app .
  tags:
    - "net"  
